name: CI

on:
  workflow_dispatch:
  push:
    # Sequence of patterns matched against refs/heads
    branches:    
      - v1.7.3         # Push events on master branch

jobs:

  build:
    runs-on: ${{ matrix.operating-system }}
    strategy: 
      matrix:
        operating-system: [ubuntu-latest]
        include: 
        - operating-system: ubuntu-latest
          MVN_COMMAND: xvfb-run mvn -Dtest.skip=true -Dmaven.test.failure.ignore=true 
          GITHUB_RELEASE_NAME: The Ulpian release
          TOOLBOX_PRODUCT_ZIP: TLAToolbox-1.7.3-linux.gtk.x86_64.zip

    steps:

    - uses: actions/checkout@v2
      with:
        # Number of commits to fetch. 0 indicates all history.
        # jgit task nested in customBuild.xml fails without history.
        fetch-depth: '0'
        
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11.0.3

      ## 
      ## Speed-up build with a cached ~/.m2/repository (300+ MB).
      ##
    - uses: actions/cache@v1
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
            ${{ runner.os }}-maven-

      ##
      ## Configure GPG key (apt repo below)
      ##
    - name: Set up GNUPG private key
      if: matrix.operating-system == 'ubuntu-latest'
      run: 'echo "$GPG_PRIVATE_KEY" > key.gpg && gpg --import key.gpg && rm key.gpg'
      shell: bash
      env:
        GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}

      ##
      ## Build TLC and Toolbox (logger reduces verbosity).
      ##
    - name: Build with Ant (Linux)
      run: ant -f tlatools/org.lamport.tlatools/customBuild.xml

      ## 
      ## Upload Linux and Windows Toolbox zip and tla2tools.jar to Github release.
      ##
    - name: Upload release assets
      if: matrix.operating-system == 'ubuntu-latest'
      run: |
           ## Crawl release id
           DRAFT_RELEASE=$(curl -sS -H "Authorization: token ${{secrets.GITHUB_TOKEN}}" https://api.github.com/repos/${{ github.repository }}/releases --header "Content-Type: application/json" | jq '.[]| select(.name=="${{ matrix.GITHUB_RELEASE_NAME }}") | .id')

           ## Delete old assets and upload replacement assets (if delete fails we still try to upload the new asset)
           ID=$(curl -sS -H "Authorization: token ${{secrets.GITHUB_TOKEN}}" https://api.github.com/repos/${{ github.repository }}/releases/$DRAFT_RELEASE/assets --header "Content-Type: application/json"  | jq '.[]| select(.name == "tla2tools.jar") | .id')
           curl -sS -X DELETE -H "Authorization: token ${{secrets.GITHUB_TOKEN}}" https://api.github.com/repos/${{ github.repository }}/releases/assets/$ID
           curl -s -X POST -H "Content-Type: application/zip" -H "Authorization: token ${{secrets.GITHUB_TOKEN}}" https://uploads.github.com/repos/${{ github.repository }}/releases/$DRAFT_RELEASE/assets?name=tla2tools.jar --upload-file tlatools/org.lamport.tlatools/dist/tla2tools.jar

           ## Generate changelog
           cd general/docs/changelogs
           ## Append sha1 sum to changelog (last line of changelog has the table header).
           echo "$(sha1sum ../../../tlatools/org.lamport.tlatools/dist/tla2tools.jar | cut -f 1 -d " ")|tla2tools.jar"  >> ch1_7_3.md
           ## Two above as one-liner without intermediate file.
           $(jq -n --argjson changelog "$(cat ch1_7_3.md | jq  --raw-input --slurp .)" -f gh-1_7_3.jq > gh-1_7_3.json)
           ## Update draft release with latest changelog in case it changed.
           ## https://developer.github.com/v3/repos/releases/#edit-a-release
           curl -sS -H "Authorization: token ${{secrets.GITHUB_TOKEN}}" https://api.github.com/repos/${{ github.repository }}/releases/$DRAFT_RELEASE -d @gh-1_7_3.json -X PATCH --header "Content-Type: application/json"

    ## 
    ## Update all git tags to make the download urls work, i.e.
    ## //github.com/tlaplus/tlaplus/releases/download/nightly/tla2tools.jar
    ## won't work without the 'nightly' tag pointing to the corresponding
    ## git sha of this build.
    ## 
    - name: Update tags
      if: matrix.operating-system == 'ubuntu-latest'
      run: |
        git config --local user.email "tlaplus-action@github.com"
        git config --local user.name "TLA+ GitHub Action"
        git push https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git --follow-tags --tags --force
